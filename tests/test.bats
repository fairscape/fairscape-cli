# tests for fairscape-cli using the BATS framework for shell scripts


setup() {
    load 'test_helper/bats-support/load'
    load 'test_helper/bats-assert/load'

    
}



@test "rocrate success" {
    # tests that should succeed for generating ROCrates
    # clear previously generated tests
    rm -rf ./tests/test_generated/test_crates/*
    
    # variables for test
    CRATE_NAME="BuildTestCrate"
    CRATE_GUID="ark:99999/BUILDTESTCRATE"
    #CRATE_PATH="./tests/test_generated/test_crates/build_test_rocrate/ro-crate-metadata.json"
    #CRATE_PATH="./tests/test_generated/test_crates/build_test_rocrate"
    CRATE_PATH="./tests/test_generated/test_crates/build_test_rocrate"
    CRATE_ORG_NAME="UVA"
    CRATE_PROJ_NAME="B2AI"

    # variables for a test dataset
    DATASET_GUID="ark:99999/apms_embeddings"
    DATASET_NAME="AP-MS embeddings"
    DATASET_AUTHOR="Chris Churas"
    DATASET_DATE_PUB="2021-04-23"
    DATASET_DESCRIPTION="Affinity purification mass spectrometer (APMS) embeddings for each protein in the study,  generated by node2vec predict."
    DATASET_ASSOC_PUB="Qin, Y. et al. A multi-scale map of cell structure fusing protein images and interactions"
    DATASET_ADD_DOC="https://idekerlab.ucsd.edu/music/"
    DATASET_SOURCE_PATH="./tests/data/APMS_embedding_MUSIC.csv"
    DATASET_DEST_PATH="$CRATE_PATH/APMS_embedding_MUSIC.csv"

    # variables for a test software
    SOFTWARE_GUID="ark:99999/music_software"
    SOFTWARE_NAME="MuSIC"
    SOFTWARE_AUTHOR="Qin, Y."
    SOFTWARE_VERSION="1.0"
    SOFTWARE_DESCRIPTION="script written in python to calibrate pairwise distance."
    SOFTWARE_DATA_FORMAT=".py"
    SOFTWARE_DATE_PUB="2021-06-20"
    SOFTWARE_SOURCE_FILEPATH="./tests/data/calibrate_pairwise_distance.py"
    SOFTWARE_DEST_FILEPATH="$CRATE_PATH/calibrate_pairwise_distance.py"

    run fairscape-cli rocrate create \
        --guid $CRATE_GUID \
        --name $CRATE_NAME \
        --organization-name $CRATE_ORG_NAME \
        --project-name $CRATE_PROJ_NAME \
        --description "example RO crate for testing" \
        --keywords "test" \
        --keywords "example" \
        $CRATE_PATH 

    assert_output 'ark:99999/BUILDTESTCRATE'
    assert_success


    run fairscape-cli rocrate add dataset \
        --name "$DATASET_NAME" \
        --guid "$DATASET_GUID" \
        --description "$DATASET_DESCRIPTION" \
        --keywords "example" \
        --keywords "test" \
        --date-published "$DATASET_DATE_PUB" \
        --author "$DATASET_AUTHOR" \
        --version '1.0.0' \
        --associated-publication "$DATASET_ASSOC_PUB" \
        --additional-documentation "$DATASET_ADD_DOC" \
        --data-format 'CSV' \
        --source-filepath "$DATASET_SOURCE_PATH" \
        --destination-filepath "$DATASET_DEST_PATH" \
        $CRATE_PATH

    assert_output 'ark:99999/apms_embeddings'
    assert_success

    run fairscape-cli rocrate add software \
        --guid "$SOFTWARE_GUID" \
        --name "$SOFTWARE_NAME" \
        --author "$SOFTWARE_AUTHOR" \
        --version "$SOFTWARE_VERSION" \
        --description "$SOFTWARE_DESCRIPTION" \
        --keywords "test" \
        --keywords "example" \
        --file-format "$SOFTWARE_DATA_FORMAT" \
        --date-modified "$SOFTWARE_DATE_PUB" \
        --source-filepath "$SOFTWARE_SOURCE_FILEPATH" \
        --destination-filepath "$SOFTWARE_DEST_FILEPATH" \
        $CRATE_PATH

    assert_output 'ark:99999/music_software'
    assert_success

    run fairscape-cli rocrate register computation \
        --guid "ark:99999/music_test_run" \
        --name "Example Computation" \
        --run-by "Max Levinson" \
        --date-created "2021-04-23" \
        --description "test run of music pipeline using example data" \
        --keywords "test" \
        --keywords "example" \
        --command "wingardium leviosa" \
        --used-software "$SOFTWARE_GUID" \
        --used-dataset "ark:99999/apms_embeddings" \
        --generated "https://github.com/idekerlab/MuSIC/blob/master/Examples/MuSIC_predicted_proximity.txt" \
        $CRATE_PATH

    assert_output 'ark:99999/music_test_run'
    assert_success
}

@test "rocrate add" {
    # create a new test crate for failures
    #
    CRATE_NAME="fail crate"
    CRATE_GUID="ark:99999/failcrate"
    CRATE_PATH="./tests/test_generated/test_crates/failure_test"
    CRATE_ORG_NAME="UVA"
    CRATE_PROJ_NAME="B2AI"
    

    run fairscape-cli rocrate create \
        --guid "$CRATE_GUID" \
        --name "$CRATE_NAME" \
        --organization-name "$CRATE_ORG_NAME" \
        --project-name "$CRATE_PROJ_NAME" \
        --description "example RO crate for testing" \
        --keywords "test" \
        --keywords "example" \
        $CRATE_PATH 

    assert_output "ark:99999/failcrate"

    # adding file that doesn't exist

}

@test "schema success" {

    # setup for schema
    SCHEMA_PATH="./tests/test_generated/schema_apms_music_embedding.json"
    rm -f $SCHEMA_PATH

    # create a tabular schema
    run fairscape-cli schema create-tabular \
        --name "APMS Embedding Schema" \
        --description "Tabular format for APMS music embeddings from PPI networks from the music pipeline from the B2AI Cellmaps for AI project" \
        --separator "," \
        --header False \
        $SCHEMA_PATH
    
    assert_success

    run fairscape-cli schema add-property string \
        --name 'Experiment Identifier' \
        --index 0 \
        --description 'Identifier for the APMS experiment responsible for generating the raw PPI used to create this embedding vector' \
        --pattern 'APMS_[0-9]*' \
        $SCHEMA_PATH

    assert_success

    run fairscape-cli schema add-property string \
        --name 'Gene Symbol' \
        --index 1 \
        --description 'Gene Symbol for the APMS bait protien' \
        --pattern '[A-Z0-9]*' \
        --value-url 'http://edamontology.org/data_1026' \
        $SCHEMA_PATH

    assert_success


    run fairscape-cli schema add-property array \
        --name 'MUSIC APMS Embedding' \
        --index '2::' \
        --description 'Embedding Vector values for genes determined by running node2vec on APMS PPI networks. Vector has 1024 values for each bait protien' \
        --items-datatype 'number' \
        --unique-items False \
        --min-items 1024 \
        --max-items 1024 \
        $SCHEMA_PATH

    assert_success


    run fairscape-cli schema validate \
        --data examples/schemas/MUSIC_embedding/APMS_embedding_MUSIC.csv \
        --schema $SCHEMA_PATH
    assert_success

    # test intentional failure of validation
    run fairscape-cli schema validate \
        --data examples/schemas/MUSIC_embedding/APMS_embedding_corrupted.csv \
        --schema examples/schemas/MUSIC_embedding/music_apms_embedding_schema.json 

    assert_failure
        
}
